
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;

namespace Game
{
public partial class TablesComponent
{
    public DTUIForm DTUIForm { private set; get; }
    public DTEntity DTEntity { private set; get; }
    public DTScene DTScene { private set; get; }
    public DTSound DTSound { private set; get; }
    public DTUISound DTUISound { private set; get; }
    public DTMusic DTMusic { private set; get; }
    public DTOneConfig DTOneConfig { private set; get; }
    private System.Collections.Generic.Dictionary<string, IDataTable> _tables;
    public System.Collections.Generic.IEnumerable<IDataTable> DataTables => _tables.Values;
    public IDataTable GetDataTable(string tableName) => _tables.TryGetValue(tableName, out var v) ? v : null;

    public async Cysharp.Threading.Tasks.UniTask LoadAsync(System.Func<string, Cysharp.Threading.Tasks.UniTask<ByteBuf>> loader)
    {
        TablesMemory.BeginRecord();

        _tables = new System.Collections.Generic.Dictionary<string, IDataTable>();
        var loadTasks = new System.Collections.Generic.List<Cysharp.Threading.Tasks.UniTask>();

        DTUIForm = new DTUIForm(() => loader("dtuiform"));
        loadTasks.Add(DTUIForm.LoadAsync());
        _tables.Add("DTUIForm", DTUIForm);
        DTEntity = new DTEntity(() => loader("dtentity"));
        loadTasks.Add(DTEntity.LoadAsync());
        _tables.Add("DTEntity", DTEntity);
        DTScene = new DTScene(() => loader("dtscene"));
        loadTasks.Add(DTScene.LoadAsync());
        _tables.Add("DTScene", DTScene);
        DTSound = new DTSound(() => loader("dtsound"));
        loadTasks.Add(DTSound.LoadAsync());
        _tables.Add("DTSound", DTSound);
        DTUISound = new DTUISound(() => loader("dtuisound"));
        loadTasks.Add(DTUISound.LoadAsync());
        _tables.Add("DTUISound", DTUISound);
        DTMusic = new DTMusic(() => loader("dtmusic"));
        loadTasks.Add(DTMusic.LoadAsync());
        _tables.Add("DTMusic", DTMusic);
        DTOneConfig = new DTOneConfig(() => loader("dtoneconfig"));
        loadTasks.Add(DTOneConfig.LoadAsync());
        _tables.Add("DTOneConfig", DTOneConfig);

        await Cysharp.Threading.Tasks.UniTask.WhenAll(loadTasks);

        Refresh();

        TablesMemory.EndRecord();
    }

    private void ResolveRef()
    {
        DTUIForm.ResolveRef(this);
        DTEntity.ResolveRef(this);
        DTScene.ResolveRef(this);
        DTSound.ResolveRef(this);
        DTUISound.ResolveRef(this);
        DTMusic.ResolveRef(this);
        DTOneConfig.ResolveRef(this);
        PostResolveRef();
    }

    public void Refresh()
    {
        PostInit();
        ResolveRef();
    }

    partial void PostInit();
    partial void PostResolveRef();
}
}
